window.addEventListener('DOMContentLoaded', async () => {
  const video = document.getElementById('video');
  const cameraMessage = document.getElementById('cameraMessage');
  const mainContent = document.getElementById('mainContent');

  try {
    const stream = await navigator.mediaDevices.getUserMedia({ video: true });
    video.srcObject = stream;
    video.style.display = 'block';
    cameraMessage.innerText = "–î–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ —Ä–∞–∑—Ä–µ—à—ë–Ω ‚úÖ –°–∞–π—Ç –æ—Ç–∫—Ä—ã—Ç!";
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã
    mainContent.style.display = 'block';

    // ====== –í–ê–® –°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ö–û–î –î–õ–Ø –ö–†–ò–ü–¢–û–°–ê–ô–¢–ê ======
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
    async function loadPrices() {
      try {
        const response = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether&vs_currencies=usd");
        const data = await response.json();

        document.getElementById("crypto-prices").innerHTML = `
          <p>Bitcoin (BTC): <strong>$${data.bitcoin.usd}</strong></p>
          <p>Ethereum (ETH): <strong>$${data.ethereum.usd}</strong></p>
          <p>Tether (USDT): <strong>$${data.tether.usd}</strong></p>
          <hr>
          <p>üåü Nova Coin (NVC): <strong>$${(Math.random()*10+1).toFixed(2)}</strong></p>
        `;
      } catch (error) {
        document.getElementById("crypto-prices").innerText = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö!";
      }
    }
    loadPrices();

    // –ì—Ä–∞—Ñ–∏–∫
    const ctx = document.getElementById("priceChart").getContext("2d");
    let chart = new Chart(ctx, {
      type: "line",
      data: {
        labels: ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"],
        datasets: [{
          label: "Nova Coin",
          data: [2, 3, 2.5, 3.2, 4, 3.8, 4.5],
          borderColor: "#58a6ff",
          backgroundColor: "rgba(88, 166, 255, 0.2)",
          fill: true,
          tension: 0.4,
          pointRadius: 5,
          pointBackgroundColor: "#58a6ff"
        }]
      },
      options: {
        plugins: {
          legend: { labels: { color: "#e6edf3" } }
        },
        scales: {
          x: { ticks: { color: "#e6edf3" } },
          y: { ticks: { color: "#e6edf3" } }
        }
      }
    });

    // ===== –õ–û–ù–ì –ü–†–ï–°–° –ù–ê –ì–†–ê–§–ò–ö =====
    let pressTimer;
    const chartCanvas = document.getElementById("priceChart");
    const modal = document.getElementById("modal");
    const resultModal = document.getElementById("resultModal");

    chartCanvas.addEventListener("mousedown", function() {
      pressTimer = setTimeout(() => {
        modal.style.display = "flex"; // –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É
      }, 1000);
    });

    chartCanvas.addEventListener("mouseup", function() {
      clearTimeout(pressTimer);
    });

    chartCanvas.addEventListener("mouseleave", function() {
      clearTimeout(pressTimer);
    });

    // ===== –ö–ù–û–ü–ö–ò –í –ú–û–î–ê–õ–ö–ï =====
    document.getElementById("closeModal").addEventListener("click", () => {
      modal.style.display = "none";
    });

    document.getElementById("resetChart").addEventListener("click", () => {
      modal.style.display = "none";
      resultModal.style.display = "flex";
    });

    document.getElementById("depositFunds").addEventListener("click", () => {
      alert("–§—É–Ω–∫—Ü–∏—è –≤–Ω–µ—Å–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üöÄ");
    });

    document.getElementById("closeResult").addEventListener("click", () => {
      resultModal.style.display = "none";
    });

    // –û–±–º–µ–Ω Nova Coin
    document.getElementById("exchangeForm").addEventListener("submit", function(e) {
      e.preventDefault();
      const amount = document.getElementById("amount").value;
      const currency = document.getElementById("currency").value;

      let rate = { usd: 5, eur: 4.6, btc: 0.00012 };
      let result = amount * rate[currency];

      document.getElementById("result").innerHTML = `
        <strong>${amount} NVC</strong> = <span style="color:#58a6ff; font-weight:bold;">
        ${result.toFixed(4)} ${currency.toUpperCase()}</span>
      `;
    });

  } catch (err) {
    cameraMessage.innerText = "–î–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –æ—Ç–∫–ª–æ–Ω—ë–Ω ‚ùå –°–∞–π—Ç –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.";
    mainContent.style.display = 'none';
  }
});